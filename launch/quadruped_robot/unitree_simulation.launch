<?xml version="1.0"?>

<launch>
  <arg name="unitree_spawn_x" default="0.0" />
  <arg name="unitree_spawn_y" default="0.0" />
  <arg name="unitree_spawn_z" default="0.6" />
  <arg name="quadrotor_spawn_x" default="0.5" />
  <arg name="quadrotor_spawn_y" default="0.5" />
  <arg name="quadrotor_spawn_z" default="0.0" />
  <arg name="quadrotor_spawn_yaw" default="0.0"/>

  <arg name="robot_name" default="unitree" />


  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="debug" default="false"/>
  <arg name="worldtype" value="$(find cooperation_landing)/gazebo_model/world/cooperation_april_tags.world" />

  <!--Call the unitree dog to attend the simulation-->
  <include file="$(find cooperation_landing)/launch/quadruped_robot/normal.launch">
    <arg name="rname" default="go1"/>
  </include>

  <!-- Apriltag detection -->
  <include file="$(find apriltag_ros)/launch/continuous_detection.launch">
    <arg name="camera_name" value="/unitree_camera/upward_camera" />
    <arg name="image_topic" value="image_raw" />
  </include>
  <rosparam command="load" file="$(find cooperation_landing)/config/apriltag/tags.yaml" ns="/apriltag_ros_continuous_node"/>

  <!--Call the mini_quadrotor to attend the simulation-->
  <include file="$(find mini_quadrotor)/launch/bringup.launch">
    <arg name="rm" default="False"/>
    <arg name="sim" value="True" />
    <arg name="headless" default="true" />
    <arg name="launch_gazebo" default="false" />
    <arg name="spawn_x" default="($arg quadrotor_spawn_x)" />
    <arg name="spawn_y" default="($arg quadrotor_spawn_y)" />
    <arg name="spawn_z" default="($arg quadrotor_spawn_z)" />
    <arg name="spawn_yaw" default="($arg quadrotor_spawn_yaw)" />
<!--     <node name="quadrotor" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" -->
<!--         args="-urdf -model quadrotor -x $(arg quadrotor_spawn_x) -y $(arg quadrotor_spawn_y) -z $(arg quadrotor_spawn_z) -Y $(arg quadrotor_spawn_yaw) -param $(arg robot_ns)/robot_description"/> -->
  </include>

  <!--Give me a usb camera-->
<!--   <include file="$(find cooperation_landing)/launch/quadruped_robot/includes/sensors.launch.xml" > -->
<!--     <arg name="robot_ns" value="unitree_go1" /> -->
<!--   </include > -->

  <!--Landing gear-->
<!--   <node pkg="tf" type="static_transform_publisher" name="landing_gear_broadcaster" args="1 0 0 3.1415 0 3.1415 /quadrotor/root /base 50" /> -->
  <node pkg="tf" type="static_transform_publisher" name="landing_gear_broadcaster" args="$(arg unitree_spawn_x) $(arg unitree_spawn_y) 0 0 0 0 /world /base 50" />
<!--   <node pkg="tf" type="static_transform_publisher" name="quadrotor_broadcaster" args="$(arg quadrotor_spawn_x) $(arg quadrotor_spawn_y) $(arg quadrotor_spawn_z) 1 1 0 /base /quadrotor/root 50" /> -->

  <!--    Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="world_name" value="$(arg worldtype)" />
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
  </include>


  <node pkg="gazebo_ros" type="spawn_model" name="spawn_unitree" respawn="false" output="screen" args="-urdf -model unitree -x $(arg unitree_spawn_x) -y $(arg unitree_spawn_y) -z $(arg unitree_spawn_z) -param robot_description -unpause" />
  <node name="quadrotor" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model quadrotor -x $(arg quadrotor_spawn_x) -y $(arg quadrotor_spawn_y) -z $(arg quadrotor_spawn_z) -Y $(arg quadrotor_spawn_yaw) -param quadrotor/robot_description"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find cooperation_landing)/config/robot/unitree.rviz" />
</launch>
